import{_ as l,c as t,o as i,a2 as e}from"./chunks/framework.Dr1n16L8.js";const a="/blog/static/tree2.ChODWxwT.png",o="/blog/static/tree2all.BbooX44t.png",p="/blog/static/tree3.BIQbmy2K.png",T=JSON.parse('{"title":"树","description":"","frontmatter":{},"headers":[],"relativePath":"pages/dataStructure/树.md","filePath":"pages/dataStructure/树.md","lastUpdated":1745411034000}'),r={name:"pages/dataStructure/树.md"},c=e('<h1 id="树" tabindex="-1">树 <a class="header-anchor" href="#树" aria-label="Permalink to &quot;树&quot;">​</a></h1><blockquote><p>定义 树是由 n 个节点组成的非线性数据结构，其中 n&gt;=0，n=0 表示空树。</p></blockquote><p>「树」具有以下的特点：</p><ul><li>有且仅有一个节点没有前驱节点，该节点被称为树的 「根节点（Root）」 。</li><li>除了根节点以之，每个节点有且仅有一个直接前驱节点。</li><li>包括根节点在内，每个节点可以有多个后继节点。</li><li>当 n&gt;1 时，除了根节点之外的其他节点，可分为 m(m&gt;0)m(m&gt;0) 个互不相交的有限集合 T1,T2,...,Tm,其中每一个集合本身又是一棵树，并且被称为根的 「子树（SubTree）」。</li></ul><p>相关术语</p><ul><li>根节点：树中唯一没有前驱节点的节点。</li><li>节点：树中的元素。</li><li>度：一个节点包含的子节点个数。</li><li>分支节点：含有子节点的节点 度不为 0。</li><li>叶子节点：无子节点的节点 度为 0。</li><li>节点的层次：从根节点开始定义，根为第 1 层，根的子节点为第 2 层，以此类推</li><li>节点的深度：从根节点开始定义，根的深度为 0，根的子节点的深度为 1，以此类推</li><li>路径：树中两个节点之间路径上经过的边数（节点数）</li><li>路径长度：路径上边数之和</li><li>节点的祖先： 从根节点到当前节点的路径上所有节点</li><li>节点的子孙：节点的子树中所有节点被称为该节点的子孙</li></ul><p>树的分类</p><ul><li>有序树： 节点的各个子树从左至右有序，不能互换位置</li><li>无序树： 节点的各个子树可以互换位置</li></ul><h2 id="二叉树" tabindex="-1">二叉树 <a class="header-anchor" href="#二叉树" aria-label="Permalink to &quot;二叉树&quot;">​</a></h2><p>二叉树可以使用递归的方式来定义，二叉树需满足下面两个要求之一：</p><ul><li>空树： 二叉树为空树，即根节点为空。</li><li>非空树：二叉树时由一个根节点和两颗互不相交的子树 T1，T2 组成的。其中 T1 和 T2 都是二叉树。</li></ul><p>⼆叉树是种特殊的树，它最多有两个⼦树，分别为左⼦树和右⼦树，并且两个子树是有序的，不可以互换。也就是说，在⼆叉树中不存在度⼤于 2 的节点</p><p>二叉树逻辑上可以分为以下 5 中基本形态：</p><p><img src="'+a+'" alt="二叉树"></p><p><code>特殊二叉树</code></p><blockquote><p>满二叉树： 所有节点都有两个子节点，并且所有叶子节点都在同一层。</p></blockquote><p><img src="'+o+'" alt="满二叉树"></p><blockquote><p>完全二叉树： 如果叶子节点只能出现在最下面两层，并且最下层的叶子节点都依次排列在该层最左边的位置上，具有这种特点的二叉树称为完全二叉树。</p></blockquote><p>完全二叉树满足以下特点：</p><ul><li>叶子节点只能出现在最下面两层。</li><li>最下层的叶子节点一定集中在该层最左边的位置上。</li><li>倒数第二层如果有叶子节点，则该层的叶子节点一定集中在右边的位置上。</li><li>如果节点的度为 1，则该节点只偶遇左孩子节点，即不存在只有右子树的情况。</li><li>同等节点数的二叉树中，完全二叉树的深度最小。</li></ul><p><img src="'+p+'" alt="完全二叉树"></p>',21),s=[c];function n(_,u,d,m,g,h){return i(),t("div",null,s)}const f=l(r,[["render",n]]);export{T as __pageData,f as default};
