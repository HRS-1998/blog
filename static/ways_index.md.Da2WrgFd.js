import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.Dr1n16L8.js";const c=JSON.parse('{"title":"记录 NUXT 实际开发中的问题","description":"","frontmatter":{},"headers":[],"relativePath":"ways/index.md","filePath":"ways/index.md","lastUpdated":1745980984000}'),e={name:"ways/index.md"},n=t(`<p>一、 <a href="https://www.jianshu.com/p/45efffc8e2c6" target="_blank" rel="noreferrer">仓库迁移</a></p><ol><li>先克隆旧仓库</li><li>git fetch 同步提交 commit</li><li>到对应分支下添加镜像地址</li><li>git push neworigin dev(旧分支):new-dev(新仓库分支)</li></ol><p>二、<a href="https://blog.csdn.net/qq_52775800/article/details/135344549" target="_blank" rel="noreferrer">nvm 设置</a></p><p>三、服务器安装 node,pm2 [pm2 安装](<a href="https://blog.csdn.net/qq_36231887/article/details/100703016" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_36231887/article/details/100703016</a> pm2)</p><p><a href="https://cloud.tencent.com/document/product/213/38237" target="_blank" rel="noreferrer">node 安装</a> 其中安装 node 18 服务器会报错 G 2.2.7 错误，安装 16 <a href="https://blog.csdn.net/weixin_43654123/article/details/122142197" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_43654123/article/details/122142197</a></p><p>四、nginx 命令 <a href="https://www.cainiaojc.com/nginx/starting-and-restarting-nginx.html" target="_blank" rel="noreferrer">nginx 命令</a></p><h1 id="记录-nuxt-实际开发中的问题" tabindex="-1">记录 NUXT 实际开发中的问题 <a class="header-anchor" href="#记录-nuxt-实际开发中的问题" aria-label="Permalink to &quot;记录 NUXT 实际开发中的问题&quot;">​</a></h1><h2 id="使用-nuxtimg-和-img-的区别" tabindex="-1">使用 NuxtImg 和 img 的区别 <a class="header-anchor" href="#使用-nuxtimg-和-img-的区别" aria-label="Permalink to &quot;使用 NuxtImg 和 img 的区别&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div><h2 id="i18n" tabindex="-1">i18n <a class="header-anchor" href="#i18n" aria-label="Permalink to &quot;i18n&quot;">​</a></h2><p>i18n 配置好后，vue 组件中可以直接在 template 中使用$t 无需引入 t</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">closeMobileMenu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {{ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item.label) }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="store-在组件中使用" tabindex="-1">store 在组件中使用 <a class="header-anchor" href="#store-在组件中使用" aria-label="Permalink to &quot;store 在组件中使用&quot;">​</a></h2><p>stores 文件夹下导出的 defineStore 中的属性和方法，在 vue 组件中使用时其中属性失去了响应式，可以使用 storeToRefs()方法恢复响应式。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> appStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAppStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toggleMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAppStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isMenuOpen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> storeToRefs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appStore);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,15),l=[n];function h(p,k,r,d,o,E){return a(),i("div",null,l)}const y=s(e,[["render",h]]);export{c as __pageData,y as default};
