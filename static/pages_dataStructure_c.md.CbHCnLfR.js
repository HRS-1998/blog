import{_ as t,c as d,o as r,a2 as a}from"./chunks/framework.Dr1n16L8.js";const _=JSON.parse('{"title":"一些浅显有关 c 语言的知识","description":"","frontmatter":{},"headers":[],"relativePath":"pages/dataStructure/c.md","filePath":"pages/dataStructure/c.md","lastUpdated":1744367677000}'),e={name:"pages/dataStructure/c.md"},n=a('<h1 id="一些浅显有关-c-语言的知识" tabindex="-1">一些浅显有关 c 语言的知识 <a class="header-anchor" href="#一些浅显有关-c-语言的知识" aria-label="Permalink to &quot;一些浅显有关 c 语言的知识&quot;">​</a></h1><p>数据类型对应的字节数</p><table><thead><tr><th>数据类型</th><th>32 位系统</th><th>64 位系统 (Linux/macOS)</th><th>Windows 系统</th></tr></thead><tbody><tr><td>char</td><td>1</td><td>1</td><td>1</td></tr><tr><td>short</td><td>2</td><td>2</td><td>2</td></tr><tr><td>int</td><td>4</td><td>4</td><td>4</td></tr><tr><td>long</td><td>4</td><td>8</td><td>4</td></tr><tr><td>long long</td><td>8</td><td>8</td><td>8</td></tr><tr><td>float</td><td>4</td><td>4</td><td>4</td></tr><tr><td>double</td><td>8</td><td>8</td><td>8</td></tr><tr><td>long double</td><td>12</td><td>16</td><td>8</td></tr><tr><td>指针类型</td><td>4</td><td>8</td><td>8（x64）</td></tr></tbody></table><p>c 的占位符</p><table><thead><tr><th>数据类型</th><th>输入(scanf)</th><th>输出(printf)</th><th>特殊说明</th></tr></thead><tbody><tr><td>signed char</td><td>%c</td><td>%c</td><td></td></tr><tr><td>unsigned char</td><td>%hhu</td><td>%hhu</td><td>原%c 容易产生类型歧义</td></tr><tr><td>short</td><td>%hd</td><td>%hd</td><td></td></tr><tr><td>unsigned short</td><td>%hu</td><td>%hu</td><td></td></tr><tr><td>int</td><td>%d</td><td>%d</td><td></td></tr><tr><td>unsigned int</td><td>%u</td><td>%u</td><td></td></tr><tr><td>long</td><td>%ld</td><td>%ld</td><td></td></tr><tr><td>unsigned long</td><td>%lu</td><td>%lu</td><td></td></tr><tr><td>long long</td><td>%lld</td><td>%lld</td><td></td></tr><tr><td>unsigned long long</td><td>%llu</td><td>%llu</td><td></td></tr><tr><td>float</td><td>%f</td><td>%f</td><td></td></tr><tr><td>double</td><td>%lf</td><td>%f</td><td>输出时不区分%f/%lf</td></tr><tr><td>long double</td><td>%Lf</td><td>%Lf</td><td>必须大写 L</td></tr><tr><td>size_t</td><td>%zu</td><td>%zu</td><td>原生无符号类型</td></tr><tr><td>指针类型</td><td>%p</td><td>%p</td><td>需要(void*)强制转换</td></tr></tbody></table><p>类型修饰符影响</p><table><thead><tr><th>修饰符组合</th><th>典型示例</th><th>取值范围</th></tr></thead><tbody><tr><td>signed</td><td>signed char</td><td>-128 ~ 127</td></tr><tr><td>unsigned</td><td>unsigned int</td><td>0 ~ 4,294,967,295</td></tr><tr><td>short + int</td><td>short int</td><td>-32,768 ~ 32,767</td></tr><tr><td>long + int</td><td>long int</td><td>-2^31 ~ 2^31-1 (32 位系统)</td></tr></tbody></table><p>b 指针的声明</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 声明一个指向 int 类型的指针</span></span></code></pre></div>',9),s=[n];function h(i,l,o,c,p,u){return r(),d("div",null,s)}const b=t(e,[["render",h]]);export{_ as __pageData,b as default};
